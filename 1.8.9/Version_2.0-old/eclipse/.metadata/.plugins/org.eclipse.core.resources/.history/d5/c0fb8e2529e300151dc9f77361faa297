package com.animcogn.sonicScrewdriverMod.items;

import com.animcogn.sonicScrewdriverMod.events.AttackCountdown;
import com.animcogn.sonicScrewdriverMod.events.CountDown;
import com.animcogn.sonicScrewdriverMod.events.CountDown.DisplayInterval;

import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.item.Item;
import net.minecraft.item.ItemArmor;
import net.minecraft.item.ItemStack;
import net.minecraft.potion.Potion;
import net.minecraft.potion.PotionEffect;
import net.minecraft.world.World;

public class TimelordArmor extends ItemArmor {
	
	public TimelordArmor(String unlocalizedName, ArmorMaterial material, int renderIndex, int armorType) {
		 super(material, renderIndex, armorType);
		 this.setUnlocalizedName(unlocalizedName);
		 
	}

	@Override
	public void onArmorTick(World world, EntityPlayer player, ItemStack itemStack) {
		
		if (itemStack.getItem() == ModItems.timelordHelmet) {
			effectPlayer(player, Potion.nightVision, 1);
		}
		
		if (itemStack.getItem() == ModItems.timelordChestplate) {
			absorbtion(player);
				
		}
		
		if (itemStack.getItem() == ModItems.timelordLeggings) {
			effectPlayer(player, Potion.moveSpeed, 1);
		}
		
		if (itemStack.getItem() == ModItems.timelordBoots) {
	        effectPlayer(player, Potion.jump, 1);
	    }
		
	    if (this.isWearingFullSet(player, ModItems.timelordHelmet, ModItems.timelordChestplate, 
	    		ModItems.timelordLeggings, ModItems.timelordBoots)) {
			this.effectPlayer(player, Potion.regeneration, 1);
	    }
	}
	
	private void effectPlayer(EntityPlayer player, Potion potion, int amplifier) {
	    //Always effect for 8 seconds, then refresh
	    if (player.getActivePotionEffect(potion) == null || player.getActivePotionEffect(potion).getDuration() <= 1)
	        player.addPotionEffect(new PotionEffect(potion.id, 159, amplifier, true, true));
	}
	
	private void absorbtion(EntityPlayer player) {
//		System.out.println("hey, atleast this ran :)");
		float health;
		float absorbtion;
		health = player.getHealth();
		absorbtion = player.getAbsorptionAmount();
			if (health == 20.0F) {
				System.out.println("health is togeather");
				while (absorbtion > 6.0F && DisplayInterval.absorbtionInterval == false && AttackCountdown.healthy == true) {
						System.out.println("while statement passed");
						absorbtion = (absorbtion + 1.0F);
						System.out.println("added stuff together");
						player.setAbsorptionAmount(absorbtion);
						System.out.println("the absorbtion amount is --> " + absorbtion);
						DisplayInterval.absorbtionInterval = true;
						CountDown.startInterval();	
				}
			}
		}
	
	private boolean isWearingFullSet(EntityPlayer player, Item helmet, Item chestplate, Item leggings, Item boots) {
		return player.inventory.armorItemInSlot(3) != null && player.inventory.armorItemInSlot(3).getItem() == helmet
				&& player.inventory.armorItemInSlot(2) != null && player.inventory.armorItemInSlot(2).getItem() == chestplate
				&& player.inventory.armorItemInSlot(1) != null && player.inventory.armorItemInSlot(1).getItem() == leggings
				&& player.inventory.armorItemInSlot(0) != null && player.inventory.armorItemInSlot(0).getItem() == boots;
	}
	
}
